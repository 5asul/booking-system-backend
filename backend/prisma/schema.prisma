// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  
 
}

// Enum for post status
 enum Role {
  ADMIN
  PATIENT
  DOCTOR
}


// User Model
model User {
  id         Int    @id @default(autoincrement())
  username   String    @unique
  email      String    @unique
  password   String
  status     Boolean   @default(true)
  specialist String?
  workingTime String?
  role       Role      @default(ADMIN)
  createdAt  DateTime  @default(now())
  updatedAt DateTime @updatedAt
  appointmentsAsPatient Appointment[] @relation("PatientAppointments")
  appointmentsAsDoctor  Appointment[] @relation("DoctorAppointments")
  
}

// Appointment Model
model Appointment {
  id                Int        @id @default(autoincrement())
  patent_name       String
  appointment_date  String
  status            Boolean @default(true)
  createdAt         DateTime   @default(now())
  // Relations
  patent          User   @relation("PatientAppointments", fields: [patentId], references: [id],onDelete: Cascade)
  patentId        Int
  doctor          User   @relation("DoctorAppointments", fields: [doctorId], references: [id],onDelete: Cascade)
  doctorId        Int
}



